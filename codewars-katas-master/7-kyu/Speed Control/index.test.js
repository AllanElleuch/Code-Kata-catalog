const gps = require('.')

test('Test 1', () => {
  expect(gps(20, [0, 0.23, 0.46, 0.69, 0.92, 1.15, 1.38, 1.61])).toBe(41)
})

test('Test 2', () => {
  expect(
    gps(12, [
      0,
      0.11,
      0.22,
      0.33,
      0.44,
      0.65,
      1.08,
      1.26,
      1.68,
      1.89,
      2.1,
      2.31,
      2.52,
      3.25,
    ])
  ).toBe(219)
})

test('Test 3', () => {
  expect(
    gps(20, [
      0,
      0.18,
      0.36,
      0.54,
      0.72,
      1.05,
      1.26,
      1.47,
      1.92,
      2.16,
      2.4,
      2.64,
      2.88,
      3.12,
      3.36,
      3.6,
      3.84,
    ])
  ).toBe(80)
})

test('Test 4', () => {
  expect(
    gps(14, [
      0,
      0.01,
      0.36,
      0.6,
      0.84,
      1.05,
      1.26,
      1.47,
      1.68,
      1.89,
      2.1,
      2.31,
      2.52,
      2.73,
      2.94,
      3.15,
    ])
  ).toBe(90)
})

test('Test 5', () => {
  expect(
    gps(17, [0, 0.02, 0.36, 0.54, 0.72, 0.9, 1.08, 1.26, 1.44, 1.62, 1.8])
  ).toBe(72)
})

test('Test 6', () => {
  expect(gps(17, [0, 0.02, 0.44, 0.66, 0.88, 1.1, 1.32, 1.54, 1.76])).toBe(88)
})

test('Test 7', () => {
  expect(
    gps(16, [
      0,
      0.2,
      0.4,
      0.6,
      0.8,
      1,
      1.32,
      1.54,
      1.76,
      1.98,
      2.2,
      2.42,
      2.76,
      2.99,
      3.22,
      3.45,
    ])
  ).toBe(76)
})

test('Test 8', () => {
  expect(
    gps(17, [
      0,
      0.01,
      0.36,
      0.75,
      1,
      1.25,
      1.5,
      1.75,
      2,
      2.25,
      2.5,
      2.75,
      3,
      3.25,
      3.5,
      3.75,
      4,
      4.25,
      4.5,
      4.75,
    ])
  ).toBe(82)
})

test('Test 9', () => {
  expect(
    gps(19, [
      0,
      0.2,
      0.4,
      0.69,
      0.92,
      1.15,
      1.38,
      1.61,
      1.92,
      2.16,
      2.4,
      2.64,
      2.88,
      3.12,
      3.36,
    ])
  ).toBe(58)
})

test('Test 10', () => {
  expect(gps(19, [])).toBe(0)
})

test('Test 11', () => {
  expect(gps(19, [0])).toBe(0)
})
